diff --git a/core/modules/jsonapi/tests/src/Functional/MenuLinkContentTest.php b/core/modules/jsonapi/tests/src/Functional/MenuLinkContentTest.php
index 05d7f47c24..c3a53bf037 100644
--- a/core/modules/jsonapi/tests/src/Functional/MenuLinkContentTest.php
+++ b/core/modules/jsonapi/tests/src/Functional/MenuLinkContentTest.php
@@ -56,7 +56,10 @@ class MenuLinkContentTest extends ResourceTestBase {
    * {@inheritdoc}
    */
   protected function setUpAuthorization($method) {
-    $this->grantPermissionsToTestedRole(['administer menu']);
+    $this->grantPermissionsToTestedRole([
+      'access user profiles',
+      'administer menu',
+    ]);
   }
 
   /**
@@ -67,7 +70,7 @@ protected function createEntity() {
       'id' => 'llama',
       'title' => 'Llama Gabilondo',
       'description' => 'Llama Gabilondo',
-      'link' => 'https://nl.wikipedia.org/wiki/Llama',
+      'link' => 'entity:user/1',
       'weight' => 0,
       'menu_name' => 'main',
     ]);
@@ -102,7 +105,7 @@ protected function getExpectedDocument() {
         'attributes' => [
           'bundle' => 'menu_link_content',
           'link' => [
-            'uri' => 'https://nl.wikipedia.org/wiki/Llama',
+            'uri' => 'entity:user/1',
             'title' => NULL,
             'options' => [],
           ],
@@ -238,4 +241,13 @@ public function testLinkOptionsSerialization() {
     $this->assertResourceResponse(200, Json::decode($response_body), $response);
   }
 
+  /**
+   * {@inheritdoc}
+   */
+  public function testRelationships() {
+    // @see \Drupal\Tests\jsonapi\Functional\ResourceTestBase::doTestRelationshipMutation()
+    $this->grantPermissionsToTestedRole(['access user profiles']);
+    parent::testRelationships();
+  }
+
 }
diff --git a/core/modules/menu_link_content/src/MenuLinkContentAccessControlHandler.php b/core/modules/menu_link_content/src/MenuLinkContentAccessControlHandler.php
index b663f27071..d72c7ca604 100644
--- a/core/modules/menu_link_content/src/MenuLinkContentAccessControlHandler.php
+++ b/core/modules/menu_link_content/src/MenuLinkContentAccessControlHandler.php
@@ -50,9 +50,27 @@ public static function createInstance(ContainerInterface $container, EntityTypeI
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
     switch ($operation) {
       case 'view':
-        // There is no direct viewing of a menu link, but still for purposes of
-        // content_translation we need a generic way to check access.
-        return AccessResult::allowedIfHasPermission($account, 'administer menu');
+        if ($account->hasPermission('administer menu')) {
+          return AccessResult::allowed()
+            ->cachePerPermissions()
+            ->addCacheableDependency($entity);
+        }
+        // If menu link is internal, and user has access, grant view access to
+        // the menu link.
+        if (($url_object = $entity->getUrlObject()) && ($url_object->isRouted())) {
+          $link_access = $this->accessManager->checkNamedRoute($url_object->getRouteName(), $url_object->getRouteParameters(), $account, TRUE);
+          if ($link_access->isAllowed()) {
+            return AccessResult::allowed()
+              ->cachePerPermissions()
+              ->addCacheableDependency($entity);
+          }
+        }
+        // Grant view access to external links.
+        elseif ($url_object->isExternal()) {
+          return AccessResult::allowed()
+            ->cachePerPermissions()
+            ->addCacheableDependency($entity);
+        }
 
       case 'update':
         if (!$account->hasPermission('administer menu')) {
diff --git a/core/modules/menu_link_content/tests/src/Functional/Rest/MenuLinkContentResourceTestBase.php b/core/modules/menu_link_content/tests/src/Functional/Rest/MenuLinkContentResourceTestBase.php
index 3cdf2eff73..9c51c47838 100644
--- a/core/modules/menu_link_content/tests/src/Functional/Rest/MenuLinkContentResourceTestBase.php
+++ b/core/modules/menu_link_content/tests/src/Functional/Rest/MenuLinkContentResourceTestBase.php
@@ -38,6 +38,7 @@
    * {@inheritdoc}
    */
   protected function setUpAuthorization($method) {
+    $this->grantPermissionsToTestedRole(['access user profiles']);
     switch ($method) {
       case 'GET':
       case 'POST':
@@ -57,7 +58,7 @@ protected function createEntity() {
       'title' => 'Llama Gabilondo',
       'description' => 'Llama Gabilondo',
       'link' => [
-        'uri' => 'https://nl.wikipedia.org/wiki/Llama',
+        'uri' => 'entity:user/1',
         'options' => [
           'fragment' => 'a-fragment',
           'attributes' => [
@@ -129,7 +130,7 @@ protected function getExpectedNormalizedEntity() {
       ],
       'link' => [
         [
-          'uri' => 'https://nl.wikipedia.org/wiki/Llama',
+          'uri' => 'entity:user/1',
           'title' => NULL,
           'options' => [
             'fragment' => 'a-fragment',
